package SeleniumSessions;

import java.time.Duration;

import org.openqa.selenium.By;
import org.openqa.selenium.StaleElementReferenceException;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

public class StaleElementRefExceptionConcept {

	public static void main(String[] args) {
		
		//StaleElementReferenceException:
		//Sel maintains an ElementId for each element.
		//When page is refreshed, DOM also refreshes and new ElementId gets generated by Sel.
		//When we try to use the WebElement it throws an exception as it is using the Stale/rotten elementId.
		
		//2 ways to handle this exception:
		//1. Re-initialize the element after refresh/ navigate back/ navigate forward.
		//2. Use WebDriverWait or FluentWait so that it creates the element again generating a new elementId.
		
		WebDriver driver = new ChromeDriver();
		driver.get("https://naveenautomationlabs.com/opencart/index.php?route=account/login");

		WebElement emailId = driver.findElement(By.id("input-email"));
		emailId.sendKeys("sheema@gmail.com");
		
		driver.navigate().refresh();   // refresh/back/forward

/*
		//Way#1:
		emailId = driver.findElement(By.id("input-email"));  //Re-initializing the element
		
		emailId.sendKeys("farheen@gmail.com");  //org.openqa.selenium.StaleElementReferenceException: stale element reference: stale element not found
*/
		
		//Way#2:
		WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
					  wait.pollingEvery(Duration.ofSeconds(2))
					      .ignoring(StaleElementReferenceException.class)
					      .withMessage("Element not found...");
					
		wait.until(ExpectedConditions.visibilityOfElementLocated(By.id("input-email"))).sendKeys("umar@gmail.com");
		
		
		
	}

}
